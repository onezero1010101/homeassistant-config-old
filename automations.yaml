- id: heal_zwave1
  alias: 'ZWave Heal at 2:31 AM'
  trigger:
    platform: time
    at: '2:31:00'
  action:
    service: zwave.heal_network

- id: rainbow_light_on
  alias: Rainbow Light On
  trigger:
    platform: time
    hours: 7
    minutes: 30
    seconds: 0
#  condition:
#    condition: and
#    conditions:
#      - condition: state
#        entity_id: 'binary_sensor.mike_charging_status'
#        state: 'off'
#      - condition: state
#        entity_id: 'binary_sensor.tammy_charging_status'
#        state: 'off'
#      - condition: template
#        value_template: '{{states.binary_sensor.mike_charging_status.state}}'
  action:
    service: homeassistant.turn_on
    entity_id:
      - switch.rainbow_light
- id: puff_light_on
  alias: Puff Light On
  trigger:
    platform: time
    hours: 7
    minutes: 30
    seconds: 0
  action:
    service: homeassistant.turn_on
    entity_id:
      - switch.puff_light
- id: rainbow_light_off_930
  alias: Rainbow Light Off at 930
  trigger:
    - platform: time
      hours: 21
      minutes: 30
      seconds: 0
#    - platform: state
#      entity_id: group.phones_charging
#      to: 
  action:
    service: homeassistant.turn_off
    entity_id:
      - switch.rainbow_light
- id: rainbow_light_off_bedtime
  alias: Rainbow Light Off at Bedtime
  trigger:
    - platform: state
      entity_id: 'binary_sensor.mike_charging_status'
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: 'binary_sensor.tammy_charging_status'
        state: 'on'
      - condition: template
#        entity_id: sun.sun
        value_template: '{{ state.sun.sun.attributes.elevation < -4}}'
#        below: -4.0
  action:
    service: homeassistant.turn_off
    entity_id:
      - switch.rainbow_light
- id: puff_light_off
  alias: Puff Light Off
  trigger:
    platform: time
    hours: 21
    minutes: 30
    seconds: 0
  action:
    service: homeassistant.turn_off
    entity_id:
      - switch.puff_light
- id: check_puff_light
  alias: Check Puff Light
  trigger:
    platform: state
    entity_id: switch.puff_light
    to: 'off'
  condition:
    condition: time
    after: '07:30:00'
    before: '21:30:00'
  action:
    service: homeassistant.turn_on
    entity_id: switch.puff_light
- id: check_rainbow_light
  alias: Check Rainbow Light
  trigger:
    platform: state
    entity_id: switch.rainbow_light
    to: 'off'
  condition:
    condition: time
    after: '07:30:00'
    before: '21:30:00'
#      - condition: or
#        conditions:
#          - condition: template
#            value_template: '{{ states.sun.sun.attributes.elecation > 4 }}' 
#          - condition: and
#            conditions:
#              - condition: state
#                entity_id: 'binary_sensor.mike_charging_status'
#                state: 'off'
#              - condition: state
#                entity_id: 'binary_sensor.tammy_charging_status'
#                state: 'off'
  action:
    service: homeassistant.turn_on
    entity_id: switch.rainbow_light
- id: update_notification
  alias: Update notifications
  trigger:
    - platform: state
      entity_id: updater.updater
  action:
    service: notify.hassbot
    data:
      message: 'There is a new Home Assistant release available'
- id: pool_pump_1_on
  alias: Pool Pump Cycle 1 On
  trigger:
    platform: time
    hours: 8
    minutes: 0
    seconds: 0
#  condition:
#    condition: state
#    entity_id: input_boolean.poolpump_automation
#    state: 'on'
  action:
    service: homeassistant.turn_on
    entity_id:
      - switch.ge_14292_inwall_smart_switch_switch
- id: pool_pump_1_off
  alias: Pool Pump Cycle 1 Off
  trigger:
    platform: time
    hours: 12
    minutes: 0
    seconds: 0
  condition:
    condition: state
    entity_id: input_boolean.poolpump_automation
    state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id:
      - switch.ge_14292_inwall_smart_switch_switch
- id: pool_pump_2_on
  alias: Pool Pump Cycle 2 On
  trigger:
    platform: time
    hours: 16
    minutes: 0
    seconds: 0
  action:
    service: homeassistant.turn_on
    entity_id:
      - switch.ge_14292_inwall_smart_switch_switch
- id: pool_pump_2_off
  alias: Pool Pump Cycle 2 Off
  trigger:
    platform: time
    hours: 20
    minutes: 0
    seconds: 0
  action:
    service: homeassistant.turn_off
    entity_id:
      - switch.ge_14292_inwall_smart_switch_switch
#- id: pool_pump_3_on
#  alias: Pool Pump Cycle 3 On
#  trigger:
#    platform: time
#    hours: 0
#    minutes: 0
#    seconds: 0
#  action:
#    service: homeassistant.turn_on
#    entity_id:
#      - switch.ge_14292_inwall_smart_switch_switch
#- id: pool_pump_3_off
#  alias: Pool Pump Cycle 3 Off
#  trigger:
#    platform: time
#    hours: 2
#    minutes: 0
#    seconds: 0
#  action:
#    service: homeassistant.turn_off
#    entity_id:
#      - switch.ge_14292_inwall_smart_switch_switch
- id: pool_pump_notify
  alias: Pool Pump Notify
  trigger:
    platform: state
    entity_id: switch.ge_14292_inwall_smart_switch_switch
  action:
    service: notify.hassbot
    data_template:
      message: "Pool Pump has turned from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}"
- id: test_switch
  alias: Test Switch Notify
  trigger:
    platform: state
    entity_id: switch.test
  action:
    service: notify.hassbot
    data_template:
      message: "Test Switch from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}"
- id: notify_mike_home
  trigger:
    platform: zone
    entity_id: device_tracker.mike
    zone: zone.home
    event: leave
  action:
    service: notify.hassbot
    data:
      message: "Mike has {{ trigger.to_state.state }} home"
- id: notify_mike_home_2
  trigger:
    platform: state
    entity_id: device_tracker.mike
    from: 'home'
    to: 'not_home'
  action:
    service: notify.hassbot
#    service: mqtt.publish
    data:
      message: "Mike has left home"
#      topic: "zanzito/mike/notification"
#      payload: 'Mike has left home'
- id: notify_tammy_home
  trigger:
    platform: state
    entity_id: device_tracker.tammy
    from: 'home'
    to: 'not_home'
  action:
    service: notify.hassbot
    data:
      message: "Tammy has left home"
- id: renew_ssl_cert
  alias: 'Auto Renew SSL Cert'
  trigger:
    platform: numeric_state
    entity_id: sensor.ssl_cert_expiry
    below: 29
  action:
    service: shell_command.renew_ssl
- id: ping_pong
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/ping'
  action:
    service: notify.hassbot
    data:
      message: 'pong'
- id: climate_set_temp
#####
### Sets the downstairs thermostat temperature when the hvac_target_temp input_slider is changed
#####
  alias: 'Set thermostat temperature based on input_slider'
  trigger:
    - platform: state
      entity_id: input_number.hvac_target_temp
  action:
    - service: climate.set_temperature
      data_template:
        entity_id: >-
          {% if is_state('input_select.hvac_operation_mode', 'Heat') %}
              climate.thermostat_heating_1
          {% elif is_state('input_select.hvac_operation_mode', 'Cool') %}
              climate.thermostat_cooling_1
          {% endif %}
        temperature: "{{ states('input_number.hvac_target_temp') }}"
- id: climate_set_op_mode
#####
### Sets the downstairs thermostat operation_mode when the hvac_operation_mode input_select is changed
#####
  alias: 'Set downstairs thermostat operation_mode based on input_select'
  trigger:
    platform: state
    entity_id: input_select.hvac_operation_mode
  action:
    service: climate.set_operation_mode
    entity_id: climate.thermostat_cooling_1
    data_template:
      operation_mode: "{{ states('input_select.hvac_operation_mode') }}"

- id: climate_set_op_mode_manual
#####
### Sets the hvac_operation_mode input_select when the downstairsthermostat operation_mode is manually changed
#####
  alias: 'Set input_select based on downstairs thermostat operation_mode'
  trigger:
    platform: state
    entity_id: climate.thermostat_cooling_1
  condition:
    condition: template
    value_template: '{{ trigger.to_state.attributes.operation_mode != trigger.from_state.attributes.operation_mode }}'
  action:
    service: input_select.select_option
    entity_id: input_select.hvac_operation_mode
    data_template:
      option: '{{ states.climate.thermostat_cooling_1.attributes.operation_mode }}'
#####
### Sets the downstairs thermostat fan_mode when the hvac_fan_mode input_select is changed
#####
- id: climate_set_fan_mode
  alias: 'Set thermostat fan_mode based on input_select'
  trigger:
    platform: state
    entity_id: input_select.hvac_fan_mode
  action:
    service: climate.set_fan_mode
    entity_id: climate.thermostat_cooling_1
    data_template:
      fan_mode: >-
          {%- if is_state('input_select.hvac_fan_mode', 'Auto') -%}
              Auto Low
          {%- elif is_state('input_select.hvac_fan_mode', 'On') -%}
              On Low
          {%- endif -%}
#####
### Sets the hvac_fan_mode input_select when the downstairs thermostat fan_mode is manually changed
#####
- id: climate_set_fan_mode_manual
  alias: 'Set input_select based on thermostat fan_mode'
  trigger:
    platform: state
    entity_id: climate.thermostat_cooling_1
  condition:
    condition: template
    value_template: '{{ trigger.to_state.attributes.fan_mode != trigger.from_state.attributes.fan_mode }}'
  action:
    service: input_select.select_option
    entity_id: input_select.hvac_fan_mode
    data_template:
      option: >-
          {%- if is_state_attr('climate.thermostat_cooling_1', 'fan_mode', 'Auto Low') -%}
              Auto
          {%- elif is_state_attr('climate.thermostat_cooling_1', 'fan_mode', 'On Low') -%}
              On
          {%- endif -%}

#- id: thermostat_pump
#  alias: 'Toggle pump when call for heat and not freezing'
#  trigger:
#    platform: state
#    entity_id: climate.thermostat_heating_1
#  condition:
#    - condition: template
#      value_template: '{{ trigger.to_state.attributes.operating_state != trigger.from_state.attributes.operating_state }}'
#    - condition: numeric_state
#      entity_id: sensor.dark_sky_temperature
#      above: '40'
#  action:
#    service_template: >
#      {% if is_state_attr('climate.thermostat_heating_1', 'operating_state', 'Heating') %}
#        switch.turn_on
#      {% else %}
#        switch.turn_off
#      {% endif %}
#    entity_id: switch.stove_pump

- id: pump_antifreeze
  alias: 'Toggle pump on when temp drops'
  trigger:
    platform: state
    entity_id: sensor.dark_sky_temperature
  condition:
    condition: numeric_state
    entity_id: sensor.dark_sky_temperature
    below: '39'
  action:
    entity_id: switch.stove_pump
    service: switch.turn_on

- id: stove_overtemp
  alias: 'Toggle pump on when stove overtemp'
  trigger:
    platform: state
    entity_id: sensor.stove_water
  condition:
    condition: numeric_state
    entity_id: sensor.stove_water
    above: '185'
  action:
    entity_id: switch.stove_pump
    service: switch.turn_on


### LED SCRIPT
- alias: "Porch Animation Speed"
  initial_state: True
  hide_entity: False
  trigger:
    - platform: state
      entity_id: input_number.porch_animation_speed
  action:
    - service: mqtt.publish
      data_template:
        topic: "bruh/porch/set"
        payload: '{"transition":{{ trigger.to_state.state | int }}}'
#- alias: "Stove Shutoff"
#  trigger:
#    platform: template
#    value_template: "{% if states('sensor.stove_water') | float < 180 %}true{% endif %}"
#  action:
#    entity_id: switch.stove_blower
#    service: switch.turn_off


